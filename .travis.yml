env:
  global:
  - REPO_DIR=checkout
  - BUILD_DEPENDS="-Ur checkout/requirements.txt"
  - TEST_DEPENDS="-Ur checkout/requirements.txt"
  - PLAT=x86_64
  - UNICODE_WIDTH=32
  - WHEELHOUSE_UPLOADER_USERNAME=travis-worker
  - secure: aF7PVIQtHGwqh4+KV2OafAo14wS+/FngsAYqN2l8fQ+TB0wU0RlTqH2O+mgE5qXCjpMae0B2vVATlURk4hmgDEtlPoqzkugCpDrWeuFrvBzG4qu31Vqf0EuKCGGe52UYyXgQ7EFTD6bY8IQm57o3a+ZQfQwOctHyRe6lgsft6dM/45rF5fALRulB6l45HYhFPYOStBG8RvwWapSL8Dl5kMhJ/rtfKhWxCkBzGqd6gIlbMNmCr/YImQvrglbhMWP3XS+F6fHBRzUEzEmen24AyMes6Qx8l/rnxIas09iqGS34qWTyW61A/qxf3Tru1SsXghtfwiZa1terUVQELT9Iu8OLsq9yWR/JanxUjqqki08pM7PUh+KpCNQXkmIrwaLneqn2h5zuOotEMZUu9xZTq8e60HVf8IRXzehjwDASW8hof9iH+KKxC9PQ5gZcAPv5IWI8uIvxwCS0e99rfpATkBW/myBE/7xQhu1yLuWJpJUR+jhlqG9t+XnDoNS6P1AaI3VUZt+nZFUMsFriV4knMXUpo4Rvn2hoCDGdIgy8GB5ZYdOdkSTrn3L44TsztMMKL4kKGVUfZeK7AYD+jBgWnppPLx19HBX0kV/3RpRg/yHtDpKvgTgHPTzkJyj4ItvXX7se4ny9AgWYbxef/InWSGkqBlI96FHrZ0SbXyBIrH0=
language: python
sudo: required
dist: xenial
services: docker
if: type = push AND tag IS blank AND branch =~ /^branch-for-/
matrix:
  include:
  - os: linux
    env: MB_PYTHON_VERSION=2.7
  - os: linux
    env:
    - MB_PYTHON_VERSION=2.7
    - UNICODE_WIDTH=16
  - os: linux
    env:
    - MB_PYTHON_VERSION=2.7
    - PLAT=i686
  - os: linux
    env:
    - MB_PYTHON_VERSION=2.7
    - PLAT=i686
    - UNICODE_WIDTH=16
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.5
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.5
    - PLAT=i686
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.6
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.6
    - PLAT=i686
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.7
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.7
    - PLAT=i686
  - os: osx
    language: generic
    env:
    - MB_PYTHON_VERSION=2.7
  - os: osx
    language: generic
    env:
    - MB_PYTHON_VERSION=3.5
  - os: osx
    language: generic
    env:
    - MB_PYTHON_VERSION=3.6
  - os: osx
    language: generic
    env:
    - MB_PYTHON_VERSION=3.7
before_install:
- pip install -Ur ./mb-requirements.txt
- eval $(python ./mb.py build_spec_to_shell build-spec.json)
- git clone "${BUILD_SPEC_CLONE_URL}" "$REPO_DIR"
- export BUILD_COMMIT="${BUILD_SPEC_COMMIT}"
- printf "function run_tests {\n  pytest --pyargs ${BUILD_SPEC_PACKAGE_NAME} \n}"
  > config.sh
- source multibuild/common_utils.sh
- source multibuild/travis_steps.sh
- before_install
install:
- clean_code $REPO_DIR $BUILD_COMMIT
- build_wheel $REPO_DIR $PLAT
script:
- install_run $PLAT
after_success:
- pip install -Ur ./mb-requirements.txt
- python ./mb.py upload --build-spec build-spec.json ${TRAVIS_BUILD_DIR}/wheelhouse
