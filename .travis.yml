env:
  global:
  - REPO_DIR=checkout
  - BUILD_DEPENDS="-Ur checkout/requirements.txt"
  - TEST_DEPENDS="-Ur checkout/requirements.txt"
  - PLAT=x86_64
  - UNICODE_WIDTH=32
  - WHEELHOUSE_UPLOADER_USERNAME=travis-worker
  - secure: ia17ncYXF/yEZs9xxRDHn/iyfAI6wSe6kzAQTa4QQvh55+MOfW0TNjmwrjnMKwEeIinVdkKf7HAcsBWU+FzwYyCk/A84zhsLaM6fz06nkY36ro5U1126ZphUk7umlUKpHIgb1hac55QlbPs2VNuecQqaOEBpzFgdtP3LjrO1XeU42Pvf7ik7rTs7gO3rZy/N6WrT/c6RwGDpU0Hbkbf/Da4vcbk3X7p8NXfLgq1P9j9kAS3CwdTuJR+Kik++ac0B+Qlo06qqGoSc54c3wTIO9xSjZAHTEjOZxFToJ85AzeTq2dOq+TmNrsEuyCUpRikew8Qh4MhNlpDADKP2dOzx6Quju3lXQXcqNpSWlZ5kryJc3hdIoLwQZj81mJhE8euui01b1GaiRCV5AtF5r1CmNLS5rSJsjV4rDrTENo7UVDW7OxLbBUjtBkqr47Leltk+miBRs7KCgdm6HQnpqGwP9XzSIW8daUSvpedIE0uoo3fIvu2qEmm30f1YRismrUg/odIeSOAwrS6jIuzMSyCn/RJpgMCCtCts3jWYsh6MR/Tx5lO7hvsNLu57thQDCuJgfBQMJcaQp6cXX1GgnjIoP8BA2wO+CcahVsFvq6hGScOb81YCyfH6EIlhL3mqQiQS1T0Rl1hCgZmo+FMZoT8clkmFoYQ1VixAUVA5sfghVtU=
language: python
sudo: required
dist: xenial
services: docker
if: type = push AND tag IS blank AND branch =~ /^branch-for-/
matrix:
  include:
  - os: linux
    env: MB_PYTHON_VERSION=2.7
  - os: linux
    env:
    - MB_PYTHON_VERSION=2.7
    - UNICODE_WIDTH=16
  - os: linux
    env:
    - MB_PYTHON_VERSION=2.7
    - PLAT=i686
  - os: linux
    env:
    - MB_PYTHON_VERSION=2.7
    - PLAT=i686
    - UNICODE_WIDTH=16
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.5
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.5
    - PLAT=i686
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.6
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.6
    - PLAT=i686
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.7
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.7
    - PLAT=i686
  - os: osx
    language: generic
    env:
    - MB_PYTHON_VERSION=2.7
  - os: osx
    language: generic
    env:
    - MB_PYTHON_VERSION=3.5
  - os: osx
    language: generic
    env:
    - MB_PYTHON_VERSION=3.6
  - os: osx
    language: generic
    env:
    - MB_PYTHON_VERSION=3.7
before_install:
- pip install -Ur ./mb-requirements.txt
- eval $(python ./mb.py build_spec_to_shell build-spec.json)
- git clone "${BUILD_SPEC_CLONE_URL}" "$REPO_DIR"
- export BUILD_COMMIT="${BUILD_SPEC_COMMIT}"
- printf "function run_tests {\n  pytest --pyargs ${BUILD_SPEC_PACKAGE_NAME} \n}"
  > config.sh
- source multibuild/common_utils.sh
- source multibuild/travis_steps.sh
- before_install
install:
- clean_code $REPO_DIR $BUILD_COMMIT
- build_wheel $REPO_DIR $PLAT
script:
- install_run $PLAT
after_success:
- pip install -Ur ./mb-requirements.txt
- python ./mb.py upload --build-spec build-spec.json ${TRAVIS_BUILD_DIR}/wheelhouse
