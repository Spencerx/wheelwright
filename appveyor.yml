environment:
  global:
    REPO_DIR: cymem
    PACKAGE_NAME: cymem
    BUILD_COMMIT: 1.31.2
    BUILD_DEPENDS: "Cython"
    TEST_DEPENDS: "pytest"
    GITHUB_TOKEN:
        secure:
            gzxKbebPRLHyiNddeeczm+7idVeQosvvFg08mOJIuD9C9mTYOcQTGVWScN5/FPgv

  matrix:
    - PYTHON: C:\Python37
      PYTHON_VERSION: 3.7
      PYTHON_ARCH: 32

    - PYTHON: C:\Python37-x64
      PYTHON_VERSION: 3.7
      PYTHON_ARCH: 64

    - PYTHON: C:\Python36
      PYTHON_VERSION: 3.6
      PYTHON_ARCH: 32

    - PYTHON: C:\Python36-x64
      PYTHON_VERSION: 3.6
      PYTHON_ARCH: 64

    - PYTHON: C:\Python35
      PYTHON_VERSION: 3.5
      PYTHON_ARCH: 32

    - PYTHON: C:\Python35-x64
      PYTHON_VERSION: 3.5
      PYTHON_ARCH: 64

    - PYTHON: C:\Python27
      PYTHON_VERSION: 2.7
      PYTHON_ARCH: 32

    - PYTHON: C:\Python27-x64
      PYTHON_VERSION: 2.7
      PYTHON_ARCH: 64

# Don't generate builds for tags
skip_tags: true

install:
    - echo "Filesystem root:"
    - dir C:\
    - echo "Installed SDKs:"
    - dir "C:/Program Files/Microsoft SDKs/Windows"
    # Fetch submodules
    - git submodule update --init --recursive
    # Install new Python if necessary
    - ps: .\multibuild\install_python.ps1
    # Set up path
    - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%

    # Check that we have the expected version and architecture for Python
    - "echo We want: Python %PYTHON_VERSION%, %PYTHON_ARCH% bit"
    - "echo We're using: %PYTHON%"
    - "echo We got:"
    - python --version
    - python -c "import struct; print(struct.calcsize('P') * 8, 'bit')"

    # Get a modern working environment
    - python -m pip install -U pip setuptools wheel virtualenv

build_script:
    - pip install -U %BUILD_DEPENDS%
    - cd %REPO_DIR%
    - git checkout %BUILD_COMMIT%
    - python setup.py bdist_wheel
    - cd ..

test_script:
    # install from wheel
    - pip install --no-index --find-links %REPO_DIR%/dist/ %PACKAGE_NAME%
    - mkdir tmp_for_test
    - cd tmp_for_test
    - pip install -U %TEST_DEPENDS%
    - pytest --pyargs %PACKAGE_NAME%
    - cd ..

artifacts:
    - path: "%REPO_DIR%\\dist\\*"

on_success:
  - pip install -U pygithub click
  - dir
  - python mb.py upload --repo-id njsmith/cymem-wheels --release-id test-release %REPO_DIR%/dist/*.whl
