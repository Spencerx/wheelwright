environment:
  global:
    REPO_DIR: cymem
    PACKAGE_NAME: cymem
    BUILD_COMMIT: 1.31.2
    BUILD_DEPENDS: "Cython"
    TEST_DEPENDS: "pytest"
    WHEELHOUSE_UPLOADER_USERNAME: travis-worker
    WHEELHOUSE_UPLOADER_SECRET:
        secure:
            9s0gdDGnNnTt7hvyNpn0/ZzOMGPdwPp2SewFTfGzYk7uI+rdAN9rFq2D1gAP4NQh

  matrix:
    - PYTHON: C:\Python37
      PYTHON_VERSION: 3.7
      PYTHON_ARCH: 32

    - PYTHON: C:\Python37-x64
      PYTHON_VERSION: 3.7
      PYTHON_ARCH: 64

    - PYTHON: C:\Python36
      PYTHON_VERSION: 3.6
      PYTHON_ARCH: 32

    - PYTHON: C:\Python36-x64
      PYTHON_VERSION: 3.6
      PYTHON_ARCH: 64

    - PYTHON: C:\Python35
      PYTHON_VERSION: 3.5
      PYTHON_ARCH: 32

    - PYTHON: C:\Python35-x64
      PYTHON_VERSION: 3.5
      PYTHON_ARCH: 64

    - PYTHON: C:\Python27
      PYTHON_VERSION: 2.7
      PYTHON_ARCH: 32

    - PYTHON: C:\Python27-x64
      PYTHON_VERSION: 2.7
      PYTHON_ARCH: 64

install:
    - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
    - echo "Filesystem root:"
    - dir C:\
    - echo "Installed SDKs:"
    - dir "C:/Program Files/Microsoft SDKs/Windows"
    # Fetch submodules
    - git submodule update --init --recursive
    # Install new Python if necessary
    - ps: .\multibuild\install_python.ps1
    # Set up path
    - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%

    # Check that we have the expected version and architecture for Python
    - python --version
    - python -c "import sys, platform; print(sys.platform, platform.machine())"
    - python -c "import struct; print(struct.calcsize('P') * 8)"

    # Get a modern working environment
    - python -m pip install -U pip setuptools wheel virtualenv

build_script:
    - pip install -U %BUILD_DEPENDS%
    - cd %REPO_DIR%
    - git checkout %BUILD_COMMIT%
    - python setup.py bdist_wheel

test_script:
    # install from wheel
    - pip install --no-index --find-links dist/ %PACKAGE_NAME%
    - cd ..
    - mkdir tmp_for_test
    - cd tmp_for_test
    - pip install -U %TEST_DEPENDS%
    - pytest --pyargs %PACKAGE_NAME%
    - cd ..

artifacts:
    - path: "%REPO_DIR%\\dist\\*"

on_success:
  # Upload the generated wheel package to Rackspace
  # On Windows, Apache Libcloud cannot find a standard CA cert bundle so we
  # disable the ssl checks.
  - cd %REPO_DIR%
  - pip install wheelhouse-uploader
  - python -m wheelhouse_uploader upload --no-ssl-check --local-folder=dist --no-update-index wheels
